/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | Å |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  Ø  |  Æ  |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  UP  |  DWN  |  LFT  | RGT  |
            //                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I     &kp O     &kp P          &kp BACKSLASH
&kp SQT    &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K     &kp L     &kp BACKSLASH  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp UP    &kp DOWN  &kp LEFT       &kp RIGHT
                         &kp LGUI  &mo 1  &kp RET    &kp SPACE  &mo 2  &kp LGUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3          &kp N4          &kp N5             &kp N6         &kp N7            &kp N8       &kp N9     &kp N0         &kp BSPC
&bt BT_CLR  &trans  &trans  &trans    &trans    &trans       &kp LEFT       &kp DOWN          &kp UP       &kp RIGHT  &kp PIPE       &kp DOUBLE_QUOTES
&kp LSHFT   &kp PLUS      &kp MINUS     &kp UNDERSCORE  &kp LEFT_BRACE  &kp RIGHT_BRACE    &kp LESS_THAN  &kp GREATER_THAN  &kp PERCENT  &kp EQUAL  &kp AMPERSAND  &kp QUESTION
                                        &kp LGUI        &trans          &kp SPACE          &kp RET        &trans            &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL   &kp AT  &kp HASH          &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp TILDE  &trans  &trans            &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans     &trans  &trans            &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                              &kp LEFT_CONTROL  &trans    &kp SPACE    &kp RET    &trans     &kp LGUI
            >;
        };
    };
};
