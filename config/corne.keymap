/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Spotlight {
            bindings = <&kp LG(SPACE)>;
            key-positions = <30 31>;
        };

        Backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <7 8>;
        };

        copilot {
            bindings = <&kp LA(TAB)>;
            key-positions = <10 11>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <1 2>;
        };

        Caps {
            bindings = <&kt CLCK>;
            key-positions = <24 25>;
        };

        Enter {
            bindings = <&kp RET>;
            key-positions = <19 20 21 22>;
        };

        punktum {
            bindings = <&kp DOT>;
            key-positions = <19 20>;
        };

        Comma {
            bindings = <&kp COMMA>;
            key-positions = <31 32>;
        };

        screenshot {
            bindings = <&kp LG(LS(NUMBER_4))>;
            key-positions = <24 25 26>;
        };

        Thirds {
            bindings = <&kp LA(LS(D))>;
            key-positions = <33 34 35>;
        };

        left_half {
            bindings = <&kp LA(LG(LEFT_ARROW))>;
            key-positions = <32 33>;
        };

        right_half {
            bindings = <&kp LG(LA(RIGHT))>;
            key-positions = <35 34>;
        };

        underscore {
            bindings = <&kp QUESTION>;
            key-positions = <18 19 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | Å |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  Ø  |  Æ  |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  UP  |  DWN  |  LFT  | RGT  |
            //                    | GUI | LWR | ENT |   | SPC | RSE  | @ |

            bindings = <
&kp LA(NUMBER_6)  &kp Q  &kp W  &kp E     &kp R  &kp T      &kp Y      &kp U  &kp I             &kp O       &kp P       &kp LEFT_BRACKET
&kp BACKSLASH     &kp A  &kp S  &kp D     &kp F  &kp G      &kp H      &kp J  &kp K             &kp L       &kp SEMI    &kp SQT
&kp LSHFT         &kp Z  &kp X  &kp C     &kp V  &kp B      &kp N      &kp M  &kp LS(NUMBER_2)  &kp LS(N0)  &kp LS(N5)  &kp LS(MINUS)
                                &kp LGUI  &mo 1  &kp RET    &kp SPACE  &mo 2  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp RA(N8)  &kp RA(N9)    &kp UP_ARROW  &kp RA(RS(N8))  &kp RS(N8)  &kp RS(N9)                 &kp N7        &kp N8        &kp N9        &kp KP_MINUS  &kp LS(N0)     &kp BSPC
&kp ESCAPE  &kp LEFT      &kp DOWN      &kp RIGHT       &kp GRAVE   &kp RS(TILDE)              &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS     &kp PIPE       &kp RA(N7)
&kp LSHFT   &kp KP_MINUS  &kp MINUS     &kp UNDERSCORE  &kp LS(N7)  &kp RA(RS(RIGHT_BRACE))    &kp N1        &kp NUMBER_2  &kp NUMBER_3  &kp PLUS      &kp AMPERSAND  &kp QUESTION
                                        &kp LGUI        &trans      &kp SPACE                  &kp N0        &trans        &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LG(TAB)  &kp LC(TAB)  &kp AT  &kp HASH          &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL    &kp TILDE    &trans  &trans            &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT    &trans       &trans  &trans            &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                  &kp LEFT_CONTROL  &trans    &kp SPACE    &kp RET    &trans     &kp LGUI
            >;
        };
    };
};
